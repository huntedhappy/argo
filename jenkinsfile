pipeline {
  environment {
    // the address of your harbor registry
    REGISTRY = 'https://harbor.tkg.io'
    // the project name
    // make sure your robot account have enough access to the project
    HARBOR_PROJECTS = 'library'
    // docker image name
    APP_NAME = 'docker-example'
    // ‘robot-test’ is the credential ID you created on the KubeSphere console
    HARBOR_CREDENTIAL = 'dockerhub'
    JOB_NAME = 'jenkins integration argo'
    // which is git hub docker file 
    dockerfile = '/var/tmp/argo/nginx/backend/Dockerfile'
    
    GIT_AUTH = credentials('git')
  }
  agent any
  stages {
    stage('Cloning Git') {
      steps{
        checkout scm
      }
    }
    stage('Start') {
        agent any
        steps {
            slackSend (channel: '#dk-devops', color: '#FFFF00', message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'")
        }
    }
    stage('Building Docker Image') {
      steps{
        script {
          dockerImage = docker.build("$HARBOR_PROJECTS/$APP_NAME", "-f $dockerfile .")
        }
      }
    }
    stage("install in Docker"){
      steps {
          sh 'whoami'
      }
    }	
    stage('PUSH PRIVATE HARBOR') {
      steps {
        script {      
          docker.withRegistry ('https://harbor.tkg.io', HARBOR_CREDENTIAL) {
          dockerImage.push('${BUILD_NUMBER}')
          dockerImage.push("latest")
          }
        } 
      }
    }
    stage('Manifest version change') {
      steps {
        script {      
          sh 'cd /var/tmp/argo && sh rollout.sh ${BUILD_NUMBER}'
        }
      } 
    }
    stage('Check File change') {
      environment { 
        GIT_TAG = "jenkins-$BUILD_NUMBER"
      }      
      steps {
        sh('''
          git config user.name 'huntedhappy'
          git config user.email 'huntedhappy@gmail.com'
          git tag -a \$GIT_TAG -m "[Jenkins CI] New Tag"
        ''')
        
        sshagent(['root']) {
          sh("""
            #!/usr/bin/env bash
            set +x
            git remote rm origin
            git remote add origin git@github.com:huntedhappy/argo.git        
            git push origin \$GIT_TAG
            echo *.bak* >> .gitignore
            git clean -f -d -x                
           """)
        }
      }
    }
  }
  post {
      success {
          slackSend (channel: '#dk-devops', color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'")
      }
      failure {
          slackSend (channel: '#dk-devops', color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'")
      }
  }    
}
